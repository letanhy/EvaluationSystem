@model MajorsViewModel
@using EvaluationSystem.Models;
@{
    Layout = Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "_Layout.cshtml" : "_PopupLayout.cshtml"); ;
}

<div>
    <div class="row">
        <div class="col-sm-10 card-header  align-items-center justify-content-between" style="text-align: center">
            <h4 class="mb-0">Cập nhật ngành</h4>
        </div>
    </div>
    @using (Html.BeginForm("Edit", "Majors", FormMethod.Post))
    {
        <input name="IsPopup" type="hidden" value="@Request["IsPopup"]" />
        @Html.HiddenFor(x => x.Id)
        <div class="row mb-3">
            @Html.LabelFor(x => x.Name, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", style = "" })
                @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger", style = "" })
            </div>
        </div>
        <div class="row mb-3">
            @Html.LabelFor(x => x.Code, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Code, new { @class = "form-control", style = "" })
                @Html.ValidationMessageFor(x => x.Code, null, new { @class = "text-danger", style = "" })
            </div>
        </div>
        <div class="row mb-3">
            @Html.LabelFor(x => x.FacultyId, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(x => x.FacultyId, Model.FacultyList, new { @class = "form-select" })
                @Html.ValidationMessageFor(x => x.FacultyId, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="row justify-content-end">
            <div class="col-sm-10">
                <button type="submit" class="btn btn-primary">Cập nhật</button>
            </div>
        </div>
    }
</div>
